#include <bits/stdc++.h>
#include <assert.h>
using namespace std;
typedef int ll;
typedef long double ld;
#define PB push_back
#define MP make_pair
const ll MOD = 1000000007LL;
const ll INF = 1ULL<<28ULL;
const ll UNDEF = -1;
template<typename T> inline bool chkmax(T &a, T b) { return a < b ? a = b, true : false; }
template<typename T> inline bool chkmin(T &a, T b) { return a > b ? a = b, true : false; }
const ll MAXN=51;
bool g[MAXN][MAXN];
ll n;
ll need;
vector<int> gpow;
ll solve(long long z) {
	//printf("z:%lld\n",z);
	ll m=n-__builtin_popcountll(z);
	vector<pair<ll,ll> > v;
	if (m<need) return -1;
	for (ll x=0;x<n;x++) {
		if (((1ULL<<x)&z)) continue;
		ll miss=-1;
		for (ll y=0;y<n;y++) {
			if (((1ULL<<y)&z)) continue;
			if (!g[x][y]) {
				miss=y;
				break;
			}
		}
		if (miss!=-1) {
			ll ans1=solve(z|(1ULL<<x)); // Remove x
			ll ans2=solve(z|(1ULL<<miss)); // Remove miss
			//printf("z:%lld Deciding between (%d %d), (%d %d)\n",z,x,ans1,miss,ans2);
			return max(ans1,ans2);
		}
	}
	{
		ll sum=0;
		for (ll x=0;x<n;x++) {
			if (((1ULL<<x)&z)) continue;
			sum+=gpow[x];
		}
		return sum;
	}
}

class MagicMolecule {
	public:
	int maxMagicPower(vector <int> magicPower, vector <string> magicBond) {
		gpow=magicPower;
		n=magicBond.size();
		need=0;
		while(3*need<2*n) need++;
		for (ll x=0;x<n;x++) {
			for (ll y=0;y<n;y++) {
				g[x][y]=(magicBond[x][y]=='Y');
			}
		}
		for (ll x=0;x<n;x++) g[x][x]=true;
		ll ans=solve(0);
		return ans;
	}
};
// BEGIN CUT HERE
#include <ctime>
#include <cmath>
#include <string>
#include <vector>
#include <sstream>
#include <iostream>
#include <algorithm>
using namespace std;

int main(int argc, char* argv[])
{
	if (argc == 1) 
	{
		cout << "Testing MagicMolecule (500.0 points)" << endl << endl;
		for (int i = 0; i < 20; i++)
		{
			ostringstream s; s << argv[0] << " " << i;
			int exitCode = system(s.str().c_str());
			if (exitCode)
				cout << "#" << i << ": Runtime Error" << endl;
		}
		int T = time(NULL)-1459097438;
		double PT = T/60.0, TT = 75.0;
		cout.setf(ios::fixed,ios::floatfield);
		cout.precision(2);
		cout << endl;
		cout << "Time  : " << T/60 << " minutes " << T%60 << " secs" << endl;
		cout << "Score : " << 500.0*(.3+(.7*TT*TT)/(10.0*PT*PT+TT*TT)) << " points" << endl;
	}
	else
	{
		int _tc; istringstream(argv[1]) >> _tc;
		MagicMolecule _obj;
		int _expected, _received;
		time_t _start = clock();
		switch (_tc)
		{
			case 0:
			{
				int magicPower[] = {1,2,3};
				string magicBond[] = {"NYY","YNN","YNN"};
				_expected = 4;
				_received = _obj.maxMagicPower(vector <int>(magicPower, magicPower+sizeof(magicPower)/sizeof(int)), vector <string>(magicBond, magicBond+sizeof(magicBond)/sizeof(string))); break;
			}
			case 1:
			{
				int magicPower[] = {1,1,1,1};
				string magicBond[] = {"NNYY","NNYY","YYNN","YYNN"};
				_expected = -1;
				_received = _obj.maxMagicPower(vector <int>(magicPower, magicPower+sizeof(magicPower)/sizeof(int)), vector <string>(magicBond, magicBond+sizeof(magicBond)/sizeof(string))); break;
			}
			case 2:
			{
				int magicPower[] = {86,15,100,93,53,50};
				string magicBond[] = {"NYYYYN","YNNNNY","YNNYYN","YNYNYN","YNYYNY","NYNNYN"};
				_expected = 332;
				_received = _obj.maxMagicPower(vector <int>(magicPower, magicPower+sizeof(magicPower)/sizeof(int)), vector <string>(magicBond, magicBond+sizeof(magicBond)/sizeof(string))); break;
			}
			case 3:
			{
				int magicPower[] = {3969,9430,7242,8549,8190,8368,3704,9740,1691};
				string magicBond[] = {"NYYYYYYYY","YNYYYYYYY","YYNYYYYYY","YYYNYYYYY","YYYYNYYYY","YYYYYNYYY","YYYYYYNNY","YYYYYYNNY","YYYYYYYYN"};
				_expected = 57179;
				_received = _obj.maxMagicPower(vector <int>(magicPower, magicPower+sizeof(magicPower)/sizeof(int)), vector <string>(magicBond, magicBond+sizeof(magicBond)/sizeof(string))); break;
			}
			case 4:
			{
				int magicPower[] = {5413, 9813, 3738, 6910, 8905, 1873, 8811, 4907, 52, 8669, 4443, 5778, 3447, 6095, 9397, 278, 5303, 1192, 1718, 8685, 1937, 3510, 9364, 471, 1290, 8074};
				string magicBond[] = {"NYYYYNYYYYYYYYYYYYYYYYYYYY", "YNYYYYYYYYYYNYYYYYYYYYYYYY", "YYNYNYYYYYYYYYYYYYYYYYYYYY", "YYYNYYYYYYYYYYYYYYYYYYYYYY", "YYNYNYYYYYYYYYYYYYYYYYNYYY", "NYYYYNYYYYYYYYYYNYYYYYYYYY", "YYYYYYNYYYYYYYYYYYYYYYYYYY", "YYYYYYYNYYYYYYYYYYYYYYYYYY", "YYYYYYYYNYYYYYYYYYYNYYYYYY", "YYYYYYYYYNYYYYYYYYYYYYYYYY", "YYYYYYYYYYNYYYYYNYYNYYYYYY", "YYYYYYYYYYYNYYYYYYYYYYYYYY", "YNYYYYYYYYYYNYYYYYYYNYYYYY", "YYYYYYYYYYYYYNYYNYNYYYYYYY", "YYYYYYYYYYYYYYNYYYYYYYYYYY", "YYYYYYYYYYYYYYYNYYNYYYYYYY", "YYYYYNYYYYNYYNYYNYYYYYYYYY", "YYYYYYYYYYYYYYYYYNYYYYYYYY", "YYYYYYYYYYYYYNYNYYNYYYYYYY", "YYYYYYYYNYNYYYYYYYYNYYYYYY", "YYYYYYYYYYYYNYYYYYYYNYYNYY", "YYYYYYYYYYYYYYYYYYYYYNYYYY", "YYYYNYYYYYYYYYYYYYYYYYNYYY", "YYYYYYYYYYYYYYYYYYYYNYYNYY", "YYYYYYYYYYYYYYYYYYYYYYYYNY", "YYYYYYYYYYYYYYYYYYYYYYYYYN"};
				_expected = 104509;
				_received = _obj.maxMagicPower(vector <int>(magicPower, magicPower+sizeof(magicPower)/sizeof(int)), vector <string>(magicBond, magicBond+sizeof(magicBond)/sizeof(string))); break;
			}
			case 5:
			{
				int magicPower[] = {5802, 47, 1319, 5269, 5879, 1487, 3836, 6727, 2882, 696, 982, 9794, 778, 8187, 9723, 6292, 799, 1623, 7684, 3889, 7914, 2420, 3125, 3443, 2427, 8655, 3546, 6415, 2290, 7368, 9027, 1337, 1186, 7753, 2914, 1947, 4386};
				string magicBond[] = {};
				_expected = 130458;
				_received = _obj.maxMagicPower(vector <int>(magicPower, magicPower+sizeof(magicPower)/sizeof(int)), vector <string>(magicBond, magicBond+sizeof(magicBond)/sizeof(string))); break;
			}
			case 6:
			{
				int magicPower[] = {4132, 3189, 5977, 1686, 2400, 3551, 5703, 9137, 5889, 5612, 2872, 8008, 8989, 2930, 838, 1004, 2290, 5257, 1724, 4465, 7640, 668, 5589, 5119, 6834, 3760, 789};
				string magicBond[] = {"NYNYYYYYYYYYYYYYYYYYNYYYYYY", "YNYYYYYYYYYYYYYYYYYNYYYYYYY", "NYNYNYYNYYYYYYYYYYYYNYYYYYY", "YYYNYYYYYYYYYYYNNNYYYYYYYNY", "YYNYNYYYYYYYYYYYYYYYYYYYYNY", "YYYYYNYYYYYYYYYYYYYYYYYYYYY", "YYYYYYNYNYYYYYYYYYYYYYYYNYY", "YYNYYYYNYYYYYYYYYYYNYYYYYYY", "YYYYYYNYNYYYYYNYYYNYYYYYYNY", "YYYYYYYYYNYNYYYYYYYYYYYYYYY", "YYYYYYYYYYNYYYYYYYYYYYYYYNY", "YYYYYYYYYNYNYYYYNNYYYYYYYYY", "YYYYYYYYYYYYNYYYYYYYYYYYYYY", "YYYYYYYYYYYYYNYYYYYNNYYYYYY", "YYYYYYYYNYYYYYNYYYYYYYYYYYY", "YYYNYYYYYYYYYYYNNYYYYNYYNYY", "YYYNYYYYYYYNYYYNNYYYYYYYYYY", "YYYNYYYYYYYNYYYYYNYYYYYYYYY", "YYYYYYYYNYYYYYYYYYNYYYYYYYY", "YNYYYYYNYYYYYNYYYYYNYYYYYYY", "NYNYYYYYYYYYYNYYYYYYNYYYYYY", "YYYYYYYYYYYYYYYNYYYYYNYYYYY", "YYYYYYYYYYYYYYYYYYYYYYNYYYY", "YYYYYYYYYYYYYYYYYYYYYYYNYYY", "YYYYYYNYYYYYYYYNYYYYYYYYNNY", "YYYNNYYYNYNYYYYYYYYYYYYYNNN", "YYYYYYYYYYYYYYYYYYYYYYYYYNN"};
				_expected = 71920;
				_received = _obj.maxMagicPower(vector <int>(magicPower, magicPower+sizeof(magicPower)/sizeof(int)), vector <string>(magicBond, magicBond+sizeof(magicBond)/sizeof(string))); break;
			}
			case 7:
			{
				int magicPower[] = {272, 1082, 10950, 11194, 11278, 13887, 14648, 15097, 16283, 16552, 16570, 17067, 18902, 20040, 20938, 21772, 25084, 26081, 26711, 27567, 28356, 33313, 41961, 42438, 50102, 51506, 51959, 52650, 53216, 56158, 56192, 65141, 66711, 67953, 69634, 72386, 72914, 77174, 79085, 79318, 84882, 85692, 85844, 86984, 87867, 90554, 91650, 93560, 93695};
				string magicBond[] = {};
				_expected = 1921899;
				_received = _obj.maxMagicPower(vector <int>(magicPower, magicPower+sizeof(magicPower)/sizeof(int)), vector <string>(magicBond, magicBond+sizeof(magicBond)/sizeof(string))); break;
			}
			default: return 0;
		}
		cout.setf(ios::fixed,ios::floatfield);
		cout.precision(2);
		double _elapsed = (double)(clock()-_start)/CLOCKS_PER_SEC;
		if (_received == _expected)
			cout << "#" << _tc << ": Passed (" << _elapsed << " secs)" << endl;
		else
		{
			cout << "#" << _tc << ": Failed (" << _elapsed << " secs)" << endl;
			cout << "           Expected: " << _expected << endl;
			cout << "           Received: " << _received << endl;
		}
	}
}

// END CUT HERE
